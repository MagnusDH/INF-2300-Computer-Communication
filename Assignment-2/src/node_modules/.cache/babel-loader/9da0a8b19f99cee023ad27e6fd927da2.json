{"ast":null,"code":"var _jsxFileName = \"/home/magnus/Documents/UiT/Informatikk/3.\\xE5r/INF-2300/INF-2300-Assignment-2/src/to_do_list/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"                      \", /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \"           \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \"     \", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Clear Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), \"     \"]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\n\n// function App()\n// { \n//   const [resourceType, setResourceType] = useState(\"posts\")\n//   //Create a list \"items\" and a function that modifies this list. useState sets the list to empty by defining it as \"[]\"\n//   const [items, setItems] = useState([]) \n\n//   //useEffect function will run every time the [resourceType] changes\n//   useEffect(() =>\n//   {\n//     fetch(`http://jsonplaceholder.typicode.com/${resourceType}`)\n//     .then(response => response.json())\n//     .then(json => setItems(json))\n//   }, [resourceType])\n\n//   return(\n//     <>\n//       <div>\n//         {/*Create button that calls a function when clicked*/}\n//         <button onClick={() => setResourceType(\"posts\")}>Posts</button>\n//         <button onClick={() => setResourceType(\"Users\")}>Users</button>\n//         <button onClick={() => setResourceType(\"Comments\")}>Comments</button>\n//       </div>\n//       <h1>{resourceType}</h1>\n//       {items.map(item => {\n//         return <pre>{JSON.stringify(item)}</pre>\n//       })}\n//     </>\n//   )\n// }\n\n// export default App;\n\n// function App()\n// { \n//   //current count,function to update the count \n//   const [count, setCount] = useState(4);  //useState sets count variable to 4 from start\n\n//   //Declare function that decrements the count\n//   function decrementCount()\n//   {\n//     //Call setCount function that allows us to update the state of \"count\"\n//     //BUT we make a new variable that takes the current state of the \"count\" variable and decrement it\n//     setCount(fakeCount => fakeCount - 1);\n//   }\n\n//   //Declare function that increments the count\n//   function incrementCount()\n//   {\n//     //Call setCount function that allows us to update the state of \"count\"\n//     //BUT we make a new variable that takes the current state of the \"count\" variable and decrement it\n//     setCount(fakeCount => fakeCount + 1);\n//   }\n\n//   return(\n//     <>\n//         {/*Create button that calls a function when clicked*/}\n//         <button onClick={decrementCount}>-</button>\n//         <span>{count}</span>\n//         <button onClick={incrementCount}>+</button>\n\n//       </>\n//     )\n// }\n\n// export default App;\n\n// const Main = () => {\n// const [todos, SetTodos] = useState([]);\n\n// function GetRequests()\n// {\n//   axios.get(`http://localhost:5000/api/items/`).then(result => { \n//     const list = result.data;\n//     SetTodos(list);\n//     console.log(\"Logging ToDoList: \", todos);\n//   });\n// }\n\n// return(\n//   <div>\n//     <h1>Online To Do list</h1>\n//   </div>\n// )\n\n// const [list, setList] = React.useState(initialList);\n// const [input_string, input_field] = React.useState(\"\");\n\n// //Track input field's state\n// function handleChange(event) {\n//   input_field(event.target.value);\n// }\n\n// //Add an item to list\n// function handleAdd() {\n//   //Add input_string and id to list\n//   const List = list.concat({input_string, id});\n\n//   setList(List);\n\n//   //Set input field back to empty state\n//   input_field(\"\");\n// }\n\n// //Remove an item from the list\n// function handleRemove() {\n//   const newList = list.filter((item) => item.id !== id);\n\n//   setList(newList);\n\n// }\n\n// return(\n//   <div>\n//     <div>\n//       <h1>Online ToDo list</h1>\n//       <h5>Add something to do, then press add</h5>\n//       <input type=\"text\" value={input_string} onChange={handleChange}/>     {/*Create input field that calls function handleChange*/}\n//       <button type=\"button\" onClick={handleAdd}>                            {/*Create button that calls handleAdd when pushed*/}\n//         Add\n//       </button>\n//     </div>\n\n//     <li>{list.map((item) => (                     //Go through every item in \"List\"\n//         <p>{item.input_string}</p>         //Display item\n\n//         // <button type=\"button\" onClick={ () => handleRemove(item.id)}>\n//         //   Remove\n//         // </button>\n//         ))}\n//     </li>\n//   </div>\n// );\n// }\n\n// export default Main;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","App"],"sources":["/home/magnus/Documents/UiT/Informatikk/3.Ã¥r/INF-2300/INF-2300-Assignment-2/src/to_do_list/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport TodoList from \"./TodoList\";\n \n\nfunction App()\n{\n  return(\n    \n    <>                      {/*Can not return two things, so wrap the two things in one element by using <> </> */}\n      <TodoList/>           {/* Call TodoList component */}\n      <input type=\"text\"/>  {/* //Fetching input from user */}\n      <button>Add Todo</button>     {/*Creating button for adding things to ToDo */}\n      <button>Clear Todo</button>     {/*Creating button for adding things to ToDo */}\n\n    </>\n  )\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n// function App()\n// { \n//   const [resourceType, setResourceType] = useState(\"posts\")\n//   //Create a list \"items\" and a function that modifies this list. useState sets the list to empty by defining it as \"[]\"\n//   const [items, setItems] = useState([]) \n  \n  \n  \n//   //useEffect function will run every time the [resourceType] changes\n//   useEffect(() =>\n//   {\n//     fetch(`http://jsonplaceholder.typicode.com/${resourceType}`)\n//     .then(response => response.json())\n//     .then(json => setItems(json))\n//   }, [resourceType])\n\n//   return(\n//     <>\n//       <div>\n//         {/*Create button that calls a function when clicked*/}\n//         <button onClick={() => setResourceType(\"posts\")}>Posts</button>\n//         <button onClick={() => setResourceType(\"Users\")}>Users</button>\n//         <button onClick={() => setResourceType(\"Comments\")}>Comments</button>\n//       </div>\n//       <h1>{resourceType}</h1>\n//       {items.map(item => {\n//         return <pre>{JSON.stringify(item)}</pre>\n//       })}\n//     </>\n//   )\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App()\n// { \n//   //current count,function to update the count \n//   const [count, setCount] = useState(4);  //useState sets count variable to 4 from start\n  \n//   //Declare function that decrements the count\n//   function decrementCount()\n//   {\n//     //Call setCount function that allows us to update the state of \"count\"\n//     //BUT we make a new variable that takes the current state of the \"count\" variable and decrement it\n//     setCount(fakeCount => fakeCount - 1);\n//   }\n\n//   //Declare function that increments the count\n//   function incrementCount()\n//   {\n//     //Call setCount function that allows us to update the state of \"count\"\n//     //BUT we make a new variable that takes the current state of the \"count\" variable and decrement it\n//     setCount(fakeCount => fakeCount + 1);\n//   }\n  \n//   return(\n//     <>\n//         {/*Create button that calls a function when clicked*/}\n//         <button onClick={decrementCount}>-</button>\n//         <span>{count}</span>\n//         <button onClick={incrementCount}>+</button>\n\n//       </>\n//     )\n// }\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // const Main = () => {\n  // const [todos, SetTodos] = useState([]);\n\n  // function GetRequests()\n  // {\n  //   axios.get(`http://localhost:5000/api/items/`).then(result => { \n  //     const list = result.data;\n  //     SetTodos(list);\n  //     console.log(\"Logging ToDoList: \", todos);\n  //   });\n  // }\n\n\n\n  // return(\n  //   <div>\n  //     <h1>Online To Do list</h1>\n  //   </div>\n  // )\n\n  // const [list, setList] = React.useState(initialList);\n  // const [input_string, input_field] = React.useState(\"\");\n\n  // //Track input field's state\n  // function handleChange(event) {\n  //   input_field(event.target.value);\n  // }\n\n  // //Add an item to list\n  // function handleAdd() {\n  //   //Add input_string and id to list\n  //   const List = list.concat({input_string, id});\n\n\n  //   setList(List);\n    \n  //   //Set input field back to empty state\n  //   input_field(\"\");\n  // }\n\n  // //Remove an item from the list\n  // function handleRemove() {\n  //   const newList = list.filter((item) => item.id !== id);\n\n  //   setList(newList);\n\n  // }\n\n  // return(\n  //   <div>\n  //     <div>\n  //       <h1>Online ToDo list</h1>\n  //       <h5>Add something to do, then press add</h5>\n  //       <input type=\"text\" value={input_string} onChange={handleChange}/>     {/*Create input field that calls function handleChange*/}\n  //       <button type=\"button\" onClick={handleAdd}>                            {/*Create button that calls handleAdd when pushed*/}\n  //         Add\n  //       </button>\n  //     </div>\n\n  //     <li>{list.map((item) => (                     //Go through every item in \"List\"\n  //         <p>{item.input_string}</p>         //Display item\n          \n  //         // <button type=\"button\" onClick={ () => handleRemove(item.id)}>\n  //         //   Remove\n  //         // </button>\n  //         ))}\n  //     </li>\n  //   </div>\n  // );\n// }\n\n// export default Main;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAGlC,SAASC,GAAG,GACZ;EACE,oBAEE;IAAA,kDACE,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,8BACX;MAAO,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,qBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,wBACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B;EAAA,gBAE1B;AAEP;AAAC,KAZQA,GAAG;AAcZ,eAAeA,GAAG;;AAYlB;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAeA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAgBE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}