{"ast":null,"code":"var _jsxFileName = \"/home/magnus/Documents/UiT/Informatikk/3.\\xE5r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TodoList from \"./ToDoList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\n//Main starting function\nfunction Main() {\n  _s();\n  const [ToDoList, setToDoList] = useState([]); //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n  const input = useRef(); //Creating variable for fetching an input-string from user\n  const [Get, setGet] = useState(0);\n  const [Post, setPost] = useState(0);\n  const [Delete, setDelete] = useState(-1);\n  const [Put, setPut] = useState(0);\n  useEffect(() => {\n    // axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n    axios.get(`http://localhost:5000/api/items/`).then(result => {\n      const list = result.data;\n      console.log(list);\n      setToDoList(list);\n    });\n  }, [Get]);\n\n  //Add\n  useEffect(() => {\n    if (Post === 0) return;\n    const inputString = input.current.value;\n    axios.post(`http://localhost:5000/api/items/`, {\n      done: false,\n      id: 1,\n      name: inputString\n    }).then(result => {\n      setGet(Math.random());\n      setPost(0);\n      input.current.value = null;\n    });\n  }, [Post]);\n\n  //Delete\n  useEffect(() => {\n    if (Delete === -1) return;\n    axios.delete(`http://localhost:5000/api/items/` + Delete).then(result => {\n      setGet(Math.random());\n      setDelete(-1);\n    });\n    axios.put();\n  }, [Delete]);\n  useEffect(() => {\n    axios.put(`http://localhost:5000/api/items/` + Put, {\n      done: true\n    }).then(result => {\n      setGet(Math.random());\n      // setPut\n    });\n  }, [Put]);\n\n  //Function that replaces the origianl ToDoList with one that does not contain uncompleted To Do's\n  function ClearToDos() {\n    const newToDoList = ToDoList.filter(item => !item.done); //Create copy of ToDoList but put only the ToDo's that are not complete \n    setToDoList(newToDoList);\n  }\n\n  //Function that marks a todo as completed\n  function CheckToDo(id) {\n    const newToDoList = [...ToDoList]; //Copy the current toDoList\n    const todo = newToDoList.find(item => item.id === id); //Going through list and fetching the one ToDo that we are going to modify\n    todo.done = !todo.done; //Set the state of the one todo to the opposite of what it was\n    setToDoList(newToDoList); //Set the todos lsit to the new todos list\n  }\n\n  //What is displayed on website\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"                                                                \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"Online\\\" To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), \"                                      \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: input,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), \"                                \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPost(1),\n      children: \"Add To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: ToDoList.items && ToDoList.items.map(item => {\n        //Going through every variable in todoList and call each variable \"item\"\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => setPut(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), \"   \", item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDelete(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"wO0MHZojBjFAmtfcE0XkF6kfn8w=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoList","axios","id","Main","ToDoList","setToDoList","input","Get","setGet","Post","setPost","Delete","setDelete","Put","setPut","get","then","result","list","data","console","log","inputString","current","value","post","done","name","Math","random","delete","put","ClearToDos","newToDoList","filter","item","CheckToDo","todo","find","items","map"],"sources":["/home/magnus/Documents/UiT/Informatikk/3.Ã¥r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport TodoList from \"./ToDoList\";\nimport axios from \"axios\";\n\nlet id = 0;\n\n//Main starting function\nfunction Main ()\n{\n  const [ToDoList, setToDoList] = useState([])   //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n  const input = useRef()                   //Creating variable for fetching an input-string from user\n  const [Get, setGet] = useState(0);\n  const [Post, setPost] = useState(0);\n  const [Delete, setDelete] = useState(-1);\n  const [Put, setPut] = useState(0);\n\n  useEffect(() => \n  {\n\n    // axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n    axios.get(`http://localhost:5000/api/items/`).then(result => {\n      const list = result.data;\n      console.log(list);\n      setToDoList(list);\n    });\n  }, [Get]);\n\n\n  //Add\n  useEffect(() =>\n  {\n    if(Post === 0) return;\n\n    const inputString = input.current.value;\n\n    axios.post(`http://localhost:5000/api/items/`, {done: false, id: 1, name:inputString}).then(result => {\n      setGet(Math.random());\n      setPost(0);\n      input.current.value = null;\n    })\n  }, [Post]);\n\n  //Delete\n  useEffect(() => \n  {\n    if(Delete === -1) return;\n\n    axios.delete(`http://localhost:5000/api/items/` + Delete).then(result => {\n      setGet(Math.random());\n      setDelete(-1)\n    })\n\n    axios.put()\n  }, [Delete])\n\n  useEffect(() => \n  {\n    axios.put(`http://localhost:5000/api/items/` + Put, {done: true}).then(result => {\n      setGet(Math.random());\n      // setPut\n    })\n\n  },[Put])\n\n\n  //Function that replaces the origianl ToDoList with one that does not contain uncompleted To Do's\n  function ClearToDos()\n  {\n    const newToDoList = ToDoList.filter(item => !item.done);    //Create copy of ToDoList but put only the ToDo's that are not complete \n    setToDoList(newToDoList);\n  }\n\n  //Function that marks a todo as completed\n  function CheckToDo(id)\n  {\n    const newToDoList = [...ToDoList];                      //Copy the current toDoList\n    const todo = newToDoList.find(item => item.id === id);  //Going through list and fetching the one ToDo that we are going to modify\n    todo.done = !todo.done;                       //Set the state of the one todo to the opposite of what it was\n    setToDoList(newToDoList);                               //Set the todos lsit to the new todos list\n  }\n\n  //What is displayed on website\n  return(\n    <>                                                                {/*Function requires that only one element is returned, so wrap other elements in one element*/}\n      <h1>\"Online\" To Do List</h1>                                      {/*Creating header*/}\n      <input ref={input} type=\"text\"/>                                {/*Fetching input from user*/}\n      {/* <button onClick={AddToDo}>Add To Do</button>                    Creating button for adding ToDos to list */}\n      <button onClick={() => setPost(1)}>Add To Do</button>                    \n      {/* <button onClick={ClearToDos}>Clear completed To Do's</button>   Displaying how many todos left */}\n\n      <div>\n        {ToDoList.items && ToDoList.items.map(item => {                                                       //Going through every variable in todoList and call each variable \"item\"\n            return(\n              <div key={item.id}>\n                <input type=\"checkbox\" onChange={() => setPut(item.id)}></input>   {/*Displaying how many todos left*/}\n                {item.name}\n                <button onClick={() => setDelete(item.id)}>Delete</button>\n              </div>\n            )\n        })}\n      </div>\n      {/* <h2>{ToDoList.items && ToDoList.items.filter(item => !item.done).length} things left to do:</h2>      */}\n      {/* <TodoList todoList = {ToDoList} checkTodo={CheckToDo}/> */}\n    </> \n  )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}