{"ast":null,"code":"var _jsxFileName = \"/home/magnus/Documents/UiT/Informatikk/3.\\xE5r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet id = 0;\nfunction Test() {\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Mafakka\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n//Main starting function\n_c = Test;\nfunction Main() {\n  _s();\n  const [ToDoList, setTodoList] = useState([{\n    id: 1,\n    string: \"Spille\",\n    completed: false\n  }]); //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n\n  //Function that fetches requests from a URL and places them in a list\n  function GetRequests() {}\n  // //Function that adds a string and id to the ToDoList\n  // function AddTodo()\n  // {\n  //   const toDostring = input_string.current.value //Fetching the value of the input string \n  //   if(toDoString === \"\") return;                 //Return if an empty string has been inputed\n\n  //   id += 1;\n\n  // }\n\n  //What is displayed on website\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"                                              \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Online To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"                    \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \"                          \", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \"                    \"]\n  }, void 0, true);\n}\n_s(Main, \"A99dEwQ2/L3R+T3KmbxsyKefmxE=\");\n_c2 = Main;\nexport default Main;\nvar _c, _c2;\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"names":["React","useState","id","Test","Main","ToDoList","setTodoList","string","completed","GetRequests"],"sources":["/home/magnus/Documents/UiT/Informatikk/3.Ã¥r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\n\nlet id = 0;\n\nfunction Test()\n{\n  return(\n    <h2>Mafakka</h2>\n  )\n}\n\n//Main starting function\nfunction Main()\n{\n  const [ToDoList, setTodoList] = useState([{id: 1, string: \"Spille\", completed: false}])   //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n\n  //Function that fetches requests from a URL and places them in a list\n  function GetRequests()\n  {\n\n  }\n  // //Function that adds a string and id to the ToDoList\n  // function AddTodo()\n  // {\n  //   const toDostring = input_string.current.value //Fetching the value of the input string \n  //   if(toDoString === \"\") return;                 //Return if an empty string has been inputed\n\n  //   id += 1;\n\n\n  // }\n\n  //What is displayed on website\n  return(\n    <>                                              {/*Function requires that only one element is returned, so wrap other elements in one element*/}\n      <h1>Online To Do List</h1>                    {/*Creating header*/}\n      <input type=\"text\"/>                          {/*Fetching input from user*/}\n      <button>Add To Do</button>                    {/*Creating button for adding ToDos to list*/}\n      {/* <div>{TodoList.filter(ToDo => !ToDo.completed).length} things to do</div>                 Displaying how many todos left */}\n    </> \n  )\n}\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAEtC,IAAIC,EAAE,GAAG,CAAC;AAEV,SAASC,IAAI,GACb;EACE,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAgB;AAEpB;;AAEA;AAAA,KAPSA,IAAI;AAQb,SAASC,IAAI,GACb;EAAA;EACE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC;IAACC,EAAE,EAAE,CAAC;IAAEK,MAAM,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC,CAAC,EAAG;;EAE1F;EACA,SAASC,WAAW,GACpB,CAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;;EAEA;EACA,oBACE;IAAA,0EACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,uCAC1B;MAAO,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,6CACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B;EAAA,gBAEzB;AAEP;AAAC,GA7BQL,IAAI;AAAA,MAAJA,IAAI;AA+Bb,eAAeA,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}