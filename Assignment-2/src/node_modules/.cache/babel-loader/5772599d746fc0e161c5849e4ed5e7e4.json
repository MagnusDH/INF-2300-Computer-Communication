{"ast":null,"code":"var _jsxFileName = \"/home/magnus/Documents/UiT/Informatikk/3.\\xE5r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TodoList from \"./ToDoList\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet id = 0;\n\n//Main starting function\nfunction Main() {\n  _s();\n  const [ToDoList, setToDoList] = useState([]); //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n  const input = useRef(); //Creating variable for fetching an input-string from user\n\n  //Function that fetches requests from a URL and places them in a list\n  function GetRequests() {\n    axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n      const list = result.data;\n      console.log(list.length);\n      setToDoList(list);\n    });\n  }\n  useEffect(() => {\n    // axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n    // // axios.get(`http://localhost:5000/api/items/`).then(result => {\n    //   const list = result.data;\n    //   console.log(list.length);\n    //   setToDoList(list);\n    // });\n\n    fetch(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n      const list = result.data;\n      console.log(list);\n    });\n  }, []);\n\n  //Function that adds a To Do to the ToDoList\n  function AddToDo() {\n    const inputString = input.current.value; //Fetching the value of the input string\n\n    if (inputString === \"\") return; //Returning if input string is empty\n\n    id += 1; //Incrementing id variable to get unique id\n\n    setToDoList(prevTodos => {\n      return [...prevTodos, {\n        id: id,\n        name: inputString,\n        done: false\n      }]; //Adding new To Do to list \n    });\n\n    input.current.value = null; //Clear out the input bar to be empty\n  }\n\n  //Function that replaces the origianl ToDoList with one that does not contain uncompleted To Do's\n  function ClearToDos() {\n    const newToDoList = ToDoList.filter(item => !item.done); //Create copy of ToDoList but put only the ToDo's that are not complete \n    setToDoList(newToDoList);\n  }\n\n  //Function that marks a todo as completed\n  function CheckToDo(id) {\n    const newToDoList = [...ToDoList]; //Copy the current toDoList\n    const todo = newToDoList.find(item => item.id === id); //Going through list and fetching the one ToDo that we are going to modify\n    todo.done = !todo.done; //Set the state of the one todo to the opposite of what it was\n    setToDoList(newToDoList); //Set the todos lsit to the new todos list\n  }\n\n  //What is displayed on website\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"                                                                \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\\"Online\\\" To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), \"                                      \", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: input,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), \"                                \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddToDo,\n      children: \"Add To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), \"                    \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ClearToDos,\n      children: \"Clear completed To Do's\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [ToDoList.filter(item => !item.done).length, \" things left to do:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: ToDoList,\n      checkTodo: CheckToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"catTq5ggAWkDHwZ2yTynH/MYHjw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoList","axios","id","Main","ToDoList","setToDoList","input","GetRequests","get","then","result","list","data","console","log","length","fetch","AddToDo","inputString","current","value","prevTodos","name","done","ClearToDos","newToDoList","filter","item","CheckToDo","todo","find"],"sources":["/home/magnus/Documents/UiT/Informatikk/3.Ã¥r/INF-2300/INF-2300-Assignment-2/src/online_to_do_list/src/App.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport TodoList from \"./ToDoList\";\nimport axios from \"axios\";\n\nlet id = 0;\n\n//Main starting function\nfunction Main ()\n{\n  const [ToDoList, setToDoList] = useState([])   //Create a list \"ToDoList\" and a function that modifies the \"ToDoList\". The list is initialized to empty \"[]\"\n  const input = useRef()                   //Creating variable for fetching an input-string from user\n  \n  //Function that fetches requests from a URL and places them in a list\n  function GetRequests()\n  {\n    axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n      const list = result.data;\n      console.log(list.length);\n      setToDoList(list);\n    })\n  }\n\n  useEffect(() => \n  {\n    // axios.get(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n    // // axios.get(`http://localhost:5000/api/items/`).then(result => {\n    //   const list = result.data;\n    //   console.log(list.length);\n    //   setToDoList(list);\n    // });\n\n    fetch(`https://jsonplaceholder.typicode.com/todos/`).then(result => {\n      const list = result.data;\n      console.log(list);\n    })\n  }, []);\n\n  \n\n  //Function that adds a To Do to the ToDoList\n  function AddToDo()\n  {\n    const inputString = input.current.value;    //Fetching the value of the input string\n\n    if(inputString === \"\") return;              //Returning if input string is empty\n\n    id += 1;                                    //Incrementing id variable to get unique id\n\n    setToDoList(prevTodos => {\n      return [...prevTodos, {id:id, name: inputString, done: false}]  //Adding new To Do to list \n    })\n    input.current.value = null;                 //Clear out the input bar to be empty\n  }\n\n  //Function that replaces the origianl ToDoList with one that does not contain uncompleted To Do's\n  function ClearToDos()\n  {\n    const newToDoList = ToDoList.filter(item => !item.done);    //Create copy of ToDoList but put only the ToDo's that are not complete \n    setToDoList(newToDoList);\n  }\n\n  //Function that marks a todo as completed\n  function CheckToDo(id)\n  {\n    const newToDoList = [...ToDoList];                      //Copy the current toDoList\n    const todo = newToDoList.find(item => item.id === id);  //Going through list and fetching the one ToDo that we are going to modify\n    todo.done = !todo.done;                       //Set the state of the one todo to the opposite of what it was\n    setToDoList(newToDoList);                               //Set the todos lsit to the new todos list\n  }\n\n  //What is displayed on website\n  return(\n    <>                                                                {/*Function requires that only one element is returned, so wrap other elements in one element*/}\n      <h1>\"Online\" To Do List</h1>                                      {/*Creating header*/}\n      <input ref={input} type=\"text\"/>                                {/*Fetching input from user*/}\n      <button onClick={AddToDo}>Add To Do</button>                    {/*Creating button for adding ToDos to list*/}\n      <button onClick={ClearToDos}>Clear completed To Do's</button>   {/*Displaying how many todos left*/}\n      <h2>{ToDoList.filter(item => !item.done).length} things left to do:</h2>      \n      <TodoList todoList = {ToDoList} checkTodo={CheckToDo}/>\n    </> \n  )\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}